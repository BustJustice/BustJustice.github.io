<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Summary02</title>
      <link href="/2019/08/15/Summary02/"/>
      <url>/2019/08/15/Summary02/</url>
      
        <content type="html"><![CDATA[<h2 id="闭包理解"><a href="#闭包理解" class="headerlink" title="闭包理解"></a>闭包理解</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function f1()&#123;</span><br><span class="line">    var i = 0</span><br><span class="line">    function f1()&#123;</span><br><span class="line">        console.log(++i)</span><br><span class="line">    &#125;</span><br><span class="line">    return f1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ol><li>如何产生闭包?<ul><li>当一个嵌套的内部(子)函数引用了嵌套的外部(父)函数的变量(函数)时, 就产生了闭包</li></ul></li><li>闭包到底是什么?<ul><li>使用chrome调试查看</li><li>理解一: 闭包是嵌套的内部函数(绝大部分人)</li><li>理解二: 包含被引用变量(函数)的对象(极少数人)</li><li>注意: 闭包存在于嵌套的内部函数中</li></ul></li><li>产生闭包的条件?<ul><li>函数嵌套</li><li>内部函数引用了外部函数的数据(变量/函数)</li></ul></li></ol><hr><h3 id="声明周期"><a href="#声明周期" class="headerlink" title="声明周期"></a>声明周期</h3><ol><li>产生: 在嵌套内部函数定义执行完时就产生了(不是在调用)</li><li>死亡: 在嵌套的内部函数成为垃圾对象时</li></ol><hr><h3 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h3><ol><li>延长了局部变量的生命周期，一不注意就变成了内存泄漏</li><li>及时释放将其置为null</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>总结js01</title>
      <link href="/2019/08/15/%E6%80%BB%E7%BB%93js01/"/>
      <url>/2019/08/15/%E6%80%BB%E7%BB%93js01/</url>
      
        <content type="html"><![CDATA[<iframe allowtransparency="yes" frameborder="0" width="100%" height="600px" src="/html/summary01.html"></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>问题发现</title>
      <link href="/2019/08/14/%E9%97%AE%E9%A2%98%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/08/14/%E9%97%AE%E9%A2%98%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>文字排版还有改进空间，<br>这是改变外观的首要任务</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面经</title>
      <link href="/2019/08/13/%E9%9D%A2%E7%BB%8F/"/>
      <url>/2019/08/13/%E9%9D%A2%E7%BB%8F/</url>
      
        <content type="html"><![CDATA[<pre><code>经历第一次比较正式的面试，主要是技术面。</code></pre><p>采用了两人一小时轮番提问的方式，说真的，比较累人。<br>    一回生，二回熟。第一次面试总结经验吧。<br>我觉得主要在考察1.你解决问题的思路。2.结果背后的原理。<br>事实上，我觉得考察的方向，不就在招聘的要求和自己的简历上<br>这些来源，加上可以查看往年的公司面试的问答，范围基本会被<br>圈定，再说技术面试真的考你完全不懂的问题（也有可能在试探你<br>知识的边界也说不定）。<br>    回忆一下，问了什么问题，Vue数据绑定原理，JQuery插件编写，<br>js函数运行的底层表现（栈：最底层window函数），页面显示过程，Ajax原生，<br>响应式，自适应原生，个人项目经历，个人简介，比较奇怪，<br>本以为会问JS三大特性，然而并没有。回调函数，做搜索框，<br>回头一看这些问题，不好好准备还真答不完整。<br>    如何应对接下来的面试，1.在上述选定的范围结合此次的面试问题<br>做下二度解决，抓紧继续回收自己的简历内容。<br>    后记：随着提前批的过去，正式批笔试面试多重，随着时间的前进<br>对招聘的难度也会上升，从而会有精力不足必须缩小范围。最好的结果<br>当然是找个优秀企业，努力准备，然后二面通关。毕竟人生苦短，不如<br>踏春风游万水千山，悠哉游哉。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>执行上下文栈</title>
      <link href="/2019/08/09/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/"/>
      <url>/2019/08/09/%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<pre><code>1. 代码分类(位置)  * 全局代码  * 函数(局部)代码2. 全局执行上下文  * 在执行全局代码前将window确定为全局执行上下文  * 对全局数据进行预处理    * var定义的全局变量==&gt;undefined, 添加为window的属性    * function声明的全局函数==&gt;赋值(fun), 添加为window的方法    * this==&gt;赋值(window)  * 开始执行全局代码3. 函数执行上下文  * 在调用函数, 准备执行函数体之前, 创建对应的函数执行上下文对象(虚拟的, 存在于栈中)  * 对局部数据进行预处理    * 形参变量==&gt;赋值(实参)==&gt;添加为执行上下文的属性    * arguments==&gt;赋值(实参列表), 添加为执行上下文的属性    * var定义的局部变量==&gt;undefined, 添加为执行上下文的属性    * function声明的函数 ==&gt;赋值(fun), 添加为执行上下文的方法    * this==&gt;赋值(调用函数的对象)  * 开始执行函数体代码进一步理解1. 在全局代码执行前, JS引擎就会创建一个栈来存储管理所有的执行上下文对象2. 在全局执行上下文(window)确定后, 将其添加到栈中(压栈)3. 在函数执行上下文创建后, 将其添加到栈中(压栈)4. 在当前函数执行完后,将栈顶的对象移除(出栈)5. 当所有的代码执行完后, 栈中只剩下window</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>复习巩固ES6</title>
      <link href="/2019/08/09/%E5%A4%8D%E4%B9%A0%E5%B7%A9%E5%9B%BAES6/"/>
      <url>/2019/08/09/%E5%A4%8D%E4%B9%A0%E5%B7%A9%E5%9B%BAES6/</url>
      
        <content type="html"><![CDATA[<pre><code>严格模式    * 必须用var声明变量    * 禁止自定义的函数中的this指向window    * 创建eval作用域    * 对象不能有重名的属性区分 call/apply/bind    * call()/apply()是立即调用函数    * bind()是将函数返回    * call()于bind()的传参方式一致，而apply是传数组let/const关键字    * 在块作用域内有效 //ES5函数作用域，全局作用域    * 不能重复声明    * 不会预处理, 不存在提升    * const除了赋值后值不能改变，其他相同let箭头函数    * () =&gt; {...} 等于 function(){...}    * 箭头函数没有自己的this，箭头函数的this不是调用的时候决定的，      而是在定义的时候处在的对象就是它的this    * 扩展理解： 箭头函数的this看外层的是否有函数，      如果有，外层函数的this就是内部箭头函数的this，      如果没有，则this是window。      PS:因为被其他函数包裹的话，外层不执行，它是不会执行内部定义的，      函数是有作用域的。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>原型链总结</title>
      <link href="/2019/08/08/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%80%BB%E7%BB%93/"/>
      <url>/2019/08/08/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>图示如下<br><img src="https://s2.ax1x.com/2019/08/08/eoyRu6.png" alt="eoyRu6.png"><br>原型链总结四句话。<br>1.函数的原型对象的prototype是其实例对象的<em>proto</em><br>2.所有的函数对象，都是new Function()出来的（包括自身）<br>3.每个函数都有一个prototype属性, 它默认指向一个Object空对象(即称为: 原型对象)（Object对象除外）<br>4.Object的原型对象的_proto_为null即原型链的尽头</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一小节js</title>
      <link href="/2019/08/07/%E7%AC%AC%E4%B8%80%E5%B0%8F%E8%8A%82js/"/>
      <url>/2019/08/07/%E7%AC%AC%E4%B8%80%E5%B0%8F%E8%8A%82js/</url>
      
        <content type="html"><![CDATA[<pre><code>1-基本数据类型/值类型    1.1-String    1.2-Boolean    1.3-Null    1.4-Undefined    1.5-Number2-对象数据类型/引用数据类型    2.1-Object    2.2-Array    2.3-Function3-typeof    3.1-可以判断 undefined,function,string,boolean,number    3.2-不能判断 null,object,array4-==    4.1-x和y都是null或undefined:规则: 没有隐式类型转换,无条件返回true    4.2-x或y是NaN : NaN与任何数字都不等规则：没有隐式类型转换，无条件返回false    4.3-x和y都是string，boolean，number规则：有隐式类型转换，会将不是number类型的数据转成number    4.4-x或y是复杂数据类型 : 会先获取复杂数据类型的原始值之后再左比较    4.5-x和y都是复杂数据类型 :规则只比较地址，如果地址一致则返回true，否则返回false5-Boolean    5.1-false +0-0 NaN undefined null &apos;&apos;空串 false document.all()    5.2-true6-instanceof    6.1-左边实例，右边构造函数7-===    7.1-类型与值完全一致8-Number转换    8.1-可以转换为1 true    8.2-转换为0 &quot;&quot;空串，false,&quot;0&quot;,null,[]    8.3-转换为NaN &quot;xxx&quot;,undefined,{},function10-其他符号 &lt; , &gt;, + 等转换    https://blog.csdn.net/itcast_cn/article/details/82887895</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="/2019/08/04/%E6%97%A0%E9%A2%98/"/>
      <url>/2019/08/04/%E6%97%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>外部引用图像<br><img src="https://s2.ax1x.com/2019/08/04/ey3Aun.jpg" alt="ey3Aun.jpg"><br>内嵌html</p><iframe allowtransparency="yes" frameborder="0" width="300" height="300" src="/html/flower.html"></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网易笔试复习要点</title>
      <link href="/2019/08/02/%E7%BD%91%E6%98%93%E7%AC%94%E8%AF%95%E5%A4%8D%E4%B9%A0%E8%A6%81%E7%82%B9/"/>
      <url>/2019/08/02/%E7%BD%91%E6%98%93%E7%AC%94%E8%AF%95%E5%A4%8D%E4%B9%A0%E8%A6%81%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>为了应对网易笔试，而复习摘要回顾。<br>二叉树前中后遍历<br>根左右<br>左根右<br>左右根</p><p>完全二叉树与满二叉树</p><p>八种排序<br>冒泡 直接插入 简单选择 希尔排序 基数排序 堆排序 快速排序 归并排序<br>稳定排序 冒泡 直接插入 基数 归并<br>与初始序列无关 简单选择排序 归并排序 基数排序 堆排序 </p><p>css “-” 内联样式 峰驼法</p><p>正则<br>单词<br>/\bgood\b/<br>[a-zA-Z0-9]{1,5} * &gt;=0 + &gt;=1 .任意除了换行 </p><p>jsonp不可post请求，可以跨域</p><p>闭包，原型链，AO链</p><p>js单线程，先执行完毕，在执行队列任务</p><p>selection 内容分块，在article标签下</p><p>数组length不包括属性</p><p>var a = b = 3; 等于 b = 3; var a = b;</p><p>就这样。；。明天再说</p>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学长有话说</title>
      <link href="/2019/07/29/%E9%9D%A2%E5%90%91%E5%A4%A7%E4%BA%8C%E5%90%8C%E5%AD%A6%E7%9A%84%E7%A6%8F%E5%88%A9/"/>
      <url>/2019/07/29/%E9%9D%A2%E5%90%91%E5%A4%A7%E4%BA%8C%E5%90%8C%E5%AD%A6%E7%9A%84%E7%A6%8F%E5%88%A9/</url>
      
        <content type="html"><![CDATA[<p>   目前大二即将踏入大三的你，是否开始考虑起了未来的事。潇洒恣意的日子，晚上一起和好兄弟撸串的日子，还历历在目。真希望时光永远停在这一刻。<br><br>   就业还是考研，是大多数同学在大三，大四必须要面对的问题，但一般无论导师还是企业，都会要求你有实习项目的经验，正如是先有鸡，还是先有蛋一样。<br><br>   大多数同学没有被锻炼的机会，现在学长我也准备起了企业实习与招聘，光阴似水流，不经意间从手中溜走。有什么想问的，可以在##评论区留言##，想要导师推荐，我也可以帮你。<br><br>   —-微信：13735305008</p>]]></content>
      
      
      <categories>
          
          <category> 公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 就业 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表单</title>
      <link href="/2019/07/29/%E8%A1%A8%E5%8D%95/"/>
      <url>/2019/07/29/%E8%A1%A8%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>酝酿中，敬请期待。</p>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2019/07/29/%E5%BC%80%E7%AF%87/"/>
      <url>/2019/07/29/%E5%BC%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最难的事是坚持下去</title>
      <link href="/2019/07/18/hello-world/"/>
      <url>/2019/07/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
